* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
	font-family: 'Ubuntu', sans-serif;
	background-color: #333;
	overflow: hidden;
}

.card {
	position: relative;
	margin: 20px 80px;
	width: 450px;
	height: 700px;
	perspective: 800px;
}

.img {
	width: 100%;
	height: 100%;
	background-position: center;
	background-size: cover;
	border-radius: 15px;
	transition: 0.8s;
}

.one {
	background-image: url('forest-56930_1280.jpg');
}
.two {
	background-image: url('valley-4646114_1280.jpg');
}
.three {
	background-image: url('namibia-4965456_1280.jpg');
}

.text {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	padding: 30px;

	border-radius: 18px;
	text-align: center;
	/* background-image: linear-gradient(to top, #30cfd0 0%, #330867 100%); */
	transition: 0.8;
	opacity: 0;

	/* The opacity CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.

	https://developer.mozilla.org/en-US/docs/Web/CSS/opacity
 */
	transition: 0.9s;
}

h3 {
	margin-top: 450px;
	margin-bottom: 20px;
}

.text-one {
	transform: rotateX(-180deg);
	background-image: linear-gradient(to top, #4fb576 0%, #44c489 30%, #28a9ae 46%, #28a2b7 59%, #4c7788 71%, #6c4f63 86%, #432c39 100%);
}
.text-two {
	transform: rotateY(-180deg);
	background-image: linear-gradient(-20deg, #b721ff 0%, #21d4fd 100%);
}

.text-three{
    animation: down-reverse 0.8s;
	background-image: linear-gradient(to right, #fa709a 0%, #fee140 100%);
}
@keyframes down-reverse{  
    0%{
        z-index: 1;
    }
    50% {
		transform: translateY(60%);
        z-index: -1;
	}
    100% {
		transform: translateY(0);
        z-index: -1;
	}
}
.up-reverse-class{
    animation: up-reverse 0.8s;
}
@keyframes up-reverse{
    0% {
		opacity: 0;
	}

	20% {
		opacity: 1;
	}

	50% {
		transform: translateY(-60%);
	}

	100% {
		transform: translateY(0);
	}
}


.card:hover .text {
	transform: rotate(0);
	opacity: 1;
}

.card:hover .one {
	transform: rotateX(-90deg);
	opacity: 0;
}
.card:hover .two {
	transform: rotateY(-90deg);
}
.card:hover .three {
	animation: up 0.8s;
}
.card:hover .text-three {
	animation: down 0.8s;
}

@keyframes up {
	0% {
		transform: translateY(0);
		z-index: 1;
	}
	60% {
		transform: translateY(-55%);
		z-index: 1;
	}
}
@keyframes down {
	0% {
		transform: translateY(0);
		z-index: -1;
	}
	60% {
		transform: translateY(55%);
		z-index: -1;
	}
	70% {
		z-index: 2;
	}
}

/* The @keyframes CSS at-rule controls the intermediate steps in a CSS animation sequence by defining styles for keyframes (or waypoints) along the animation sequence. This gives more control over the intermediate steps of the animation sequence than transitions.
https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes */
